export type BlockType =
  | "title-page"
  | "jury-approval"
  | "declaration"
  | "dedication"
  | "foreword"
  | "table-of-contents"
  | "list-of-abbreviations"
  | "list-of-symbols"
  | "abstract"
  | "chapter"
  | "section"
  | "figure"
  | "table"
  | "bibliography"
  | "appendices"
  | "cv"
  | "list-of-figures"
  | "list-of-tables"
  | "turkish-title-page"
  | "turkish-abstract"
  | "subfigure"
  | "landscape-figure"
  | "landscape-table"
  | "continued-table"
  | "inline-equation"
  | "display-equation"
  | "multi-line-equation";

export interface BaseBlock {
  id: string;
  type: BlockType;
  order: number;
  content: string;
  visible?: boolean; // Whether the block is visible in the document
  notes?: string; // Optional notes about the block
  parentId?: string; // For nested blocks
  formatting?: {
    fontSize?: string;
    fontStyle?: string;
    alignment?: "left" | "center" | "right" | "justify";
    spacing?: {
      before: number;
      after: number;
      line: number;
    };
  };
}

export interface TitlePageBlock extends BaseBlock {
  type: "title-page";
  title: string;
  author: {
    name: string;
    studentId: string;
  };
  department: string;
  program: string;
  advisor: {
    name: string;
    title: string;
    institution: string;
  };
  coAdvisor?: {
    name: string;
    title: string;
    institution: string;
  };
  submissionDate: string;
  defenseDate: string;
}

export interface JuryApprovalBlock extends BaseBlock {
  type: "jury-approval";
  juryMembers: Array<{
    name: string;
    title: string;
    institution: string;
    role: "advisor" | "coAdvisor" | "member";
    signature?: string;
  }>;
  defenseDate: string;
}

export interface DeclarationBlock extends BaseBlock {
  type: "declaration";
  signature?: string;
  date: string;
}

export interface DedicationBlock extends BaseBlock {
  type: "dedication";
}

export interface ForewordBlock extends BaseBlock {
  type: "foreword";
  date: string;
  signature?: string;
}

export interface TableOfContentsBlock extends BaseBlock {
  type: "table-of-contents";
  autoGenerated: boolean;
  englishTitle?: string;
  turkishTitle?: string;
}

export interface ListOfAbbreviationsBlock extends BaseBlock {
  type: "list-of-abbreviations";
  abbreviations: Array<{
    term: string;
    definition: string;
  }>;
}

export interface ListOfSymbolsBlock extends BaseBlock {
  type: "list-of-symbols";
  symbols: Array<{
    symbol: string;
    definition: string;
  }>;
}

export interface AbstractBlock extends BaseBlock {
  type: "abstract";
  keywords: string[];
}

export interface ChapterBlock extends BaseBlock {
  type: "chapter";
  title: string;
  number: number;
}

export interface SectionBlock extends BaseBlock {
  type: "section";
  title: string;
  level: 1 | 2 | 3 | 4 | 5;
  parentNumber?: string; // For proper numbering (e.g., "1.2.3")
}

export interface FigureBlock extends BaseBlock {
  type: "figure";
  caption: string;
  label: string;
  imagePath: string;
  number?: string; // For proper numbering (e.g., "Figure 1.2")
}

export interface TableBlock extends BaseBlock {
  type: "table";
  caption: string;
  label: string;
  data: string[][];
  number?: string; // For proper numbering (e.g., "Table 1.2")
}

export interface BibliographyBlock extends BaseBlock {
  type: "bibliography";
  style: "itu"; // Using ITU-specific citation style
}

export interface AppendicesBlock extends BaseBlock {
  type: "appendices";
  appendices: Array<{
    letter: string; // A, B, C, etc.
    title: string;
    content: string;
  }>;
}

export interface CvBlock extends BaseBlock {
  type: "cv";
  personalInfo: {
    name: string;
    birthDate?: string;
    birthPlace?: string;
    email?: string;
  };
  education: Array<{
    degree: string;
    institution: string;
    year: string;
  }>;
  publications?: Array<{
    type: "journal" | "conference" | "other";
    citation: string;
  }>;
}

export interface ListOfFiguresBlock extends BaseBlock {
  type: "list-of-figures";
  autoGenerated: boolean;
  englishTitle?: string;
  turkishTitle?: string;
}

export interface ListOfTablesBlock extends BaseBlock {
  type: "list-of-tables";
  autoGenerated: boolean;
  englishTitle?: string;
  turkishTitle?: string;
}

export interface TurkishTitlePageBlock extends BaseBlock {
  type: "turkish-title-page";
  title: string;
  author: {
    name: string;
    studentId: string;
  };
  department: string;
  program: string;
  advisor: {
    name: string;
    title: string;
    institution: string;
  };
  coAdvisor?: {
    name: string;
    title: string;
    institution: string;
  };
  submissionDate: string;
  defenseDate: string;
}

export interface TurkishAbstractBlock extends BaseBlock {
  type: "turkish-abstract";
  keywords: string[];
}

export interface SubfigureBlock extends BaseBlock {
  type: "subfigure";
  caption: string;
  label: string;
  subfigures: Array<{
    imagePath: string;
    caption: string;
    label: string;
  }>;
  number?: string; // For proper numbering (e.g., "Figure 1.2")
}

export interface LandscapeFigureBlock extends BaseBlock {
  type: "landscape-figure";
  caption: string;
  label: string;
  imagePath: string;
  number?: string;
}

export interface LandscapeTableBlock extends BaseBlock {
  type: "landscape-table";
  caption: string;
  label: string;
  data: string[][];
  number?: string;
}

export interface ContinuedTableBlock extends BaseBlock {
  type: "continued-table";
  caption: string;
  label: string;
  data: string[][];
  number?: string;
  continuation: boolean;
}

export interface InlineEquationBlock extends BaseBlock {
  type: "inline-equation";
  equation: string; // LaTeX format
}

export interface DisplayEquationBlock extends BaseBlock {
  type: "display-equation";
  equation: string; // LaTeX format
  number?: string;
}

export interface MultiLineEquationBlock extends BaseBlock {
  type: "multi-line-equation";
  equations: string[]; // Array of LaTeX equations
  numbers?: string[];
}

// Union type for all block types
export type Block =
  | TitlePageBlock
  | JuryApprovalBlock
  | DeclarationBlock
  | DedicationBlock
  | ForewordBlock
  | TableOfContentsBlock
  | ListOfAbbreviationsBlock
  | ListOfSymbolsBlock
  | AbstractBlock
  | ChapterBlock
  | SectionBlock
  | FigureBlock
  | TableBlock
  | BibliographyBlock
  | AppendicesBlock
  | CvBlock
  | ListOfFiguresBlock
  | ListOfTablesBlock
  | TurkishTitlePageBlock
  | TurkishAbstractBlock
  | SubfigureBlock
  | LandscapeFigureBlock
  | LandscapeTableBlock
  | ContinuedTableBlock
  | InlineEquationBlock
  | DisplayEquationBlock
  | MultiLineEquationBlock;

export interface Citation {
  id: string;
  type: string; // e.g., 'article', 'book', 'misc'
  title: string;
  author: string;
  year: string;
  [key: string]: any; // Allow additional fields like journal, volume, pages, etc.
}

export interface Project {
  id: string;
  title: string;
  blocks: Block[];
  citations: Citation[];
  template: string; // e.g., 'standard', 'itu'
  lastModified: number; // Timestamp
  language?: string; // Document language (e.g., 'en', 'tr')
  metadata?: Record<string, any>; // Additional metadata
  created?: number; // Creation timestamp
  version?: string; // Document version
}

// Define Available Templates Configuration
export interface TemplateMetadataField {
  key: string;
  label: string;
  type: "text" | "textarea" | "select" | "date" | "jury";
  options?: string[]; // For select type
  required?: boolean;
}

export interface TemplateConfig {
  id: string;
  name: string;
  description: string;
  institution?: string;
  requiredBlocks: BlockType[];
  defaultBlocks: BlockType[]; // Blocks included by default, can be removed
  supportedLanguages: string[]; // e.g., ['en', 'tr']
  defaultLanguage: string;
  metadataFields: TemplateMetadataField[];
}

export const AVAILABLE_TEMPLATES: TemplateConfig[] = [
  {
    id: "standard",
    name: "Standard Thesis",
    description: "A generic thesis template suitable for many institutions.",
    institution: "Generic",
    requiredBlocks: ["title-page", "abstract", "chapter", "bibliography"],
    defaultBlocks: ["title-page", "abstract", "chapter", "bibliography"],
    supportedLanguages: ["en"],
    defaultLanguage: "en",
    metadataFields: [
      { key: "title", label: "Title", type: "text", required: true },
      { key: "author", label: "Author", type: "text", required: true },
      { key: "department", label: "Department", type: "text", required: true },
      { key: "university", label: "University", type: "text", required: true },
      { key: "date", label: "Date", type: "text", required: true },
    ],
  },
  {
    id: "itu",
    name: "ITU Thesis Template",
    description: "Official LaTeX template for Istanbul Technical University.",
    institution: "Istanbul Technical University",
    requiredBlocks: [
      "title-page",
      "turkish-title-page",
      "jury-approval",
      "declaration",
      "foreword",
      "table-of-contents",
      "list-of-figures",
      "list-of-tables",
      "list-of-abbreviations",
      "list-of-symbols",
      "abstract",
      "turkish-abstract",
      "chapter",
      "bibliography",
      "appendices",
      "cv",
    ],
    defaultBlocks: [
      // Front Matter
      "title-page",
      "turkish-title-page",
      "jury-approval",
      "declaration",
      "dedication",
      "foreword",
      // Table of Contents & Lists
      "table-of-contents",
      "list-of-figures",
      "list-of-tables",
      "list-of-abbreviations",
      "list-of-symbols",
      // Abstracts
      "abstract",
      "turkish-abstract",
      // Main Content
      "chapter",
      // Chapter 1: Introduction
      "section",
      // Example Elements
      "figure",
      "subfigure",
      "landscape-figure",
      "table",
      "landscape-table",
      "continued-table",
      "inline-equation",
      "display-equation",
      "multi-line-equation",
      // Back Matter
      "bibliography",
      "appendices",
      "cv",
    ],
    supportedLanguages: ["en", "tr"],
    defaultLanguage: "en",
    metadataFields: [
      { key: "title", label: "Title", type: "text", required: true },
      { key: "author", label: "Author", type: "text", required: true },
      { key: "studentId", label: "Student ID", type: "text", required: true },
      { key: "department", label: "Department", type: "text", required: true },
      { key: "program", label: "Program", type: "text", required: true },
      { key: "advisor", label: "Advisor", type: "jury", required: true },
      { key: "coAdvisor", label: "Co-Advisor", type: "jury", required: false },
      {
        key: "submissionDate",
        label: "Submission Date",
        type: "date",
        required: true,
      },
      {
        key: "defenseDate",
        label: "Defense Date",
        type: "date",
        required: true,
      },
      {
        key: "degree",
        label: "Degree",
        type: "select",
        options: ["Master of Science", "Doctor of Philosophy"],
        required: true,
      },
    ],
  },
];
